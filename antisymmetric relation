// Problem#: 7901
// Submission#: 2018343
// The source code is licensed under Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License
// URI: http://creativecommons.org/licenses/by-nc-sa/3.0/
// All Copyright reserved by Informatic Lab of Sun Yat-sen University
#include <iostream>
#include <stdlib.h> 
#include <stdio.h> 
#include <string>
#include<vector>
#include<set>
#include<map>
#include <utility>
using namespace std;
typedef set<int> Set;
 
typedef set<pair<int, int> > Relation;
 
bool antisymmetric(const Relation &R, const Set &A)
 
//R是A上的关系。如果R反对称，则返回true, 否则，返回false.
 
{
 

    set<pair<int, int> > ::iterator it=R.begin ();
    while(it!=R.end())
    {
        if(R.find(make_pair (it->second ,it->first ))!=R.end())
        {
            if(it->second !=it->first)
            return false ;
        }
        it++;
    }
    return true;
 
}                                 
